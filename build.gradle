buildscript {  
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.9.0"
    }
}
apply plugin: 'io.codearte.nexus-staging'

subprojects {
       

        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }
    }

allprojects {
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

version = '4.1.0'
group = 'com.jpaulmorrison'


description = 'Java Implementation of "Classical" Flow-Based Programming'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

nexusStaging {
    //packageGroup = "com.jpaulmorrison.javafbp" 
    username = ossrhUser
    password = ossrhPassword
    
}

dependencies {
	compile files('C:/Program Files/Java/jdk1.8.0_101/lib/tools.jar') 
}

jar {
    manifest {
        attributes 'Implementation-Title': 'JavaFBP', 'Implementation-Version': version
    }
}


if (JavaVersion.current().isJava8Compatible()) {   
        tasks.withType(Javadoc) {
            options.addBooleanOption('Xdoclint:none', true)
        }  
}

ext {
    snapshotPublicationRepository = "https://oss.sonatype.org/content/repositories/snapshots/"
    releasePublicationRepository = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

    // Credentials for publication repositories (needed only for publishing)
    // Should be set in ${HOME}/.gradle/gradle.properties
    ossrhUser =  project.hasProperty('ossrhUser') ? project.property('ossrhUser') : ""
    osshrPassword = project.hasProperty('osshrPassword') ? project.property('osshrPassword') : ""
}

// Used to generate initial maven-dir layout
task "create-dirs" { description = "Create default maven directory structure" } << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

jar {
    manifest {
        attributes 'Implementation-Title': 'JavaFBP', 'Implementation-Version': version
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

task writeNewPom << {
    pom {
        project {
            groupId 'com.jpaulmorrison'
            artifactId 'javafbp'
            version '4.1.0'
        
            inceptionYear '2016'
            licenses {
                license {
                    name 'GNU Lesser General Public License, Version 3.0'
                    url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                }
            }
   
        }
    }.writeTo("pom.xml")
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: releasePublicationRepository) {
        authentication(userName: ossrhUser, password: ossrhPassword)
      }

      snapshotRepository(url: snapshotPublicationRepository) {
       authentication(userName: ossrhUser, password: ossrhPassword)
      }

      pom.project {
        name 'JavaFBP'
        description 'Java Implementation of "Classical" Flow-Based Programming'
        groupId 'com.jpaulmorrison'
        packaging 'jar'
        // optionally artifactId can be defined here         
        url 'https://github.com/jpaulm/javafbp'
        version '4.1.0'

        scm {
          connection 'scm:git:https://github.com/jpaulm.git'
          developerConnection 'scm:git:https://github.com/jpaulm.git'
          url 'https://github.com/jpaulm.git'
        }

        licenses {
          license {
            name 'GNU Lesser General Public License, Version 3.0'
            url 'https://www.gnu.org/licenses/lgpl-3.0.txt'
          }
        }

        developers {
          developer {
            id 'jpaulmorr'
            name 'John Paul Rodker Morrison (Software architect)'
            email 'jpaulmorr@gmail.com'
          }
        }
      }
    }
  }
}
}
